JASM Light 16 3 Instruction set
Last updated 09/04/20



hx dec
00 000 NOP  ---   No operation.
01 001 MCA  ---   Moves register C to register A.
02 002 MCB  ---   Moves register C to register B.
03 003 MAD  ---   Moves register A to data register 2.
04 004 MBD  ---   Moves register B to data register 2.
05 005 MCD  ---   Moves register C to data register 2.
06 006 MDA  ---   Moves data register 2 to register A.
07 007 MDB  ---   Moves data register 2 to register B.
08 008 MCBA ---   Moves register C to register A and register A to register B (A -> B is before C -> A)
09 009 MCAB ---   Moves register C to register B and register B to register A (B -> A is before C -> B)
0A 010 ADD  ---   Sets register C to register A + register B.
0B 011 SUB  ---   Sets register C to register A - register B.
0C 012 ADC  ---   Sets register C to register A + register B, and sets the carry flag accordingly.
0D 013 SBC  ---   Sets register C to register A - register B, and sets the carry flag accordingly.
0E 014 INA  ---   Sets register C to register A incremented by 1.
0F 015 DCA  ---   Sets register C to register A decremented by 1.
10 016 SLA  ---   Sets register C to register A shifted left by 1.
11 017 SRA  ---   Sets register C to register A shifted right by 1.
12 018 SLC  ---   Sets register C to register A shifted left by 1, and sets the carry flag accordingly.
13 019 SRC  ---   Sets register C to register A shifted right by 1, and sets the carry flag accordingly.
14 020 RLA  ---   Sets register C to register A rotated left by 1. This will also set the carry flag accordingly.
15 021 RRA  ---   Sets register C to register A rotated right by 1. This will also set the carry flag accordingly.
16 022 AND  ---   Stes register C to register A bitwise and register B.
17 023 ORR  ---   Sets register C to register A bitwise or register B.
18 024 NOT  ---   Sets register C to bitwise not register A.
19 025 XOR  ---   Sets register C to register A bitwise xor register B.
1A 026 SCA  ---   Sets the carry flag.
1B 027 RCA  ---   Resets the carry flag.
1C 028 STP  ---   Stops execution.

80 128 STA  num   Sets register A to "num".
81 129 STB  num   Sets register B to "num".
82 130 STD  num   Sets data register 2 to "num
83 131 RDA  add   Reads from memory "add" to register A.
84 132 RDB  add   Reads from memory "add" to register B.
85 133 RDD  add   Reads from memory "add" to data register 2.
86 134 RAB  add   Reads from memory "add" to register A using both data registers.
87 135 RBB  add   Reads from memory "add" to register B using both data registers.
88 136 WTA  add   Writes register A to memory "add".
89 137 WTB  add   Writes register B to memory "add".
8A 138 WTC  add   Writes register C to memory "add".
8B 139 WTD  add   Writes data register 2 to memory "add".
8C 140 WAB  add   Writes register A to memory "add" using both data registers.
8D 141 WBB  add   Writes register B to memory "add" using both data registers.
8E 142 WCB  add   Writes register C to memory "add" using both data registers.
8F 143 CRA  add   Read from cache "add" to register A.
90 144 CRB  add   Read from cache "add" to register B.
91 145 CRD  add   Read from cache "add" to register data register 2.
92 146 CWA  add   Writes register A to cache "add".
93 147 CWB  add   Writes register B to cache "add".
94 148 CWC  add   Writes register C to cache "add".
95 149 CWD  add   Writes register data register 2 to cache "add".
A0 160 JMP  add   Jumps to "add" using both data registers. (this is 0b10100000 to that the 'use both registers bit' is set)
96 150 JMPO add   Jumps to "add" using one data register.

0b11------ JMPC add Jumps to "add" using conditions.



Conditional jumps data:

All bits:
1 Required
1 Required
- Num of data registers (0: 1 reg, 1: both regs)
- Invert condition (0: no, 1: yes)
- Condition type bit 3
- Condition type bit 2
- Condition type bit 1
- Condition type bit 0

Lowest 4 bits (defines condition):
0: Jump if A == B
1: Jump if A > B
2: Jump if A < B
3: Jump if A = 0
4: Jump if C = 0
5: Jump if addition overflow
6: Jump if subtraction underflow
7: Jump if shift overflow (from shift left)
8: Jump if shift underflow (from shift right)
9: Jump if carry flag set